<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper	namespace="kr.or.dgit.sw_project.dao.SoftwareMapper">
    
    <resultMap type="Software" id="SoftwareResult">
    	<id property="swCode" column="sw_code"/>
    	<result property="groupCode" column="group_code"/>
    	<result property="swName" column="sw_name"/>
    	<result property="salePrice" column="sale_price"/>
    	<result property="swInven" column="sw_inven"/>
    	<result property="swImg" column="sw_img"/>
    	<result property="swIsSale" column="sw_isSale"/>
    	<association property="category" resultMap="kr.or.dgit.sw_project.dao.CategoryMapper.CategoryResult"/>
    </resultMap>
		
	<!-- Select SQL -->
    <sql id="selectSQL">
		SELECT * FROM software sw JOIN category c on sw.group_code = c.group_code
	</sql>

	<!-- Where SQL -->
	<sql id="whereSQL">
		<where>
			<if test="swCode != null">
				sw_code=#{swCode}
			</if>
		</where>
	</sql>
	    
    <!-- Select By All -->
  	<select id="selectSoftwareByAll" resultMap="SoftwareResult">
    	<include refid="selectSQL" />
    	 	where sw_isSale= true
    		ORDER BY sw_code;
    </select>
    
    <!-- Select By No -->
	<select id="selectByNoSoftware" parameterType="Software" resultMap="SoftwareResult">
		<include refid="selectSQL"/>
		<include refid="whereSQL"/>
	</select>
	
	<!-- insert item -->
	<insert id="insertSoftwareItem" parameterType="hashmap">
		INSERT INTO software(sw_code, group_code, sw_name, sale_price, sw_inven, sw_img, sw_issale)
		VALUES(#{swCode}, (select group_code from category where group_name = #{groupName}), #{swName}, #{salePrice}, #{swInven}, #{swImg}, #{swIsSale})
	</insert>
	
	<!-- update item -->
	<update id="updateSoftwareItem" parameterType="Software">
		UPDATE software
		<set>
			<if test="swName != null">sw_name=#{swName},</if>
			<if test="salePrice != null">sale_price=#{salePrice},</if>
			<if test="swInven != null">sw_inven=#{swInven},</if>
			<if test="swIsSale != null">sw_issale=#{swIsSale},</if>
		</set>
		<include refid="whereSQL"/>
	</update>
	
	<!-- delete item -->
	<delete id="deleteSoftwareItem" parameterType="Software">
		delete from software
		<include refid="whereSQL"/>
	</delete>
	
	<!-- Not Exist item -->
	<update id="ExistSoftwareItem" parameterType="Software">
		UPDATE software SET sw_issale=#{swIsSale}
		<include refid="whereSQL"/>
	</update>
</mapper>

